apiVersion: v1
kind: Template
metadata:
  name: launchpad-builder
  annotations:
    description: This template creates a Build Configuration using an S2I builder.
    tags: instant-app
parameters:
  - name: SOURCE_REPOSITORY_URL
    description: The source URL for the application
    displayName: Source URL
    required: true
  - name: SOURCE_REPOSITORY_REF
    description: The branch name for the application
    displayName: Source Branch
    value: master
    required: true
  - name: SOURCE_REPOSITORY_DIR
    description: The location within the source repo of the application
    displayName: Source Directory
    value: .
    required: true
  - name: GITHUB_WEBHOOK_SECRET
    description: A secret string used to configure the GitHub webhook.
    displayName: GitHub Webhook Secret
    required: true
    from: '[a-zA-Z0-9]{40}'
    generate: expression
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: nodejs-configmap-redhat
    spec: {}
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: runtime
    spec:
      tags:
        - name: latest
          from:
            kind: DockerImage
            name: 'registry.access.redhat.com/rhoar-nodejs/nodejs-10:latest'
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      name: nodejs-configmap-redhat
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: 'nodejs-configmap-redhat:latest'
      postCommit: {}
      resources: {}
      source:
        git:
          uri: '${SOURCE_REPOSITORY_URL}'
          ref: '${SOURCE_REPOSITORY_REF}'
        type: Git
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: 'runtime:latest'
          incremental: true
      triggers:
        - github:
            secret: '${GITHUB_WEBHOOK_SECRET}'
          type: GitHub
        - type: ConfigChange
        - imageChange: {}
          type: ImageChange
    status:
      lastVersion: 0
  - apiVersion: v1
    kind: Service
    spec:
      ports:
        - protocol: TCP
          port: 8080
          targetPort: 8080
      type: ClusterIP
      selector:
        project: nodejs-configmap-redhat
        provider: nodeshift
    metadata:
      name: nodejs-configmap-redhat
      labels:
        provider: nodeshift
        expose: 'true'
        project: nodejs-configmap-redhat
        version: 2.1.0
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: nodejs-configmap-redhat
      labels:
        app: nodejs-configmap-redhat
        provider: nodeshift
        project: nodejs-configmap-redhat
        version: 2.1.0
    spec:
      template:
        spec:
          volumes:
            - configMap:
                name: app-config
                items:
                  - key: app-config.yml
                    path: app-config.yml
              name: config
          containers:
            - env:
                - name: NODE_CONFIGMAP_PATH
                  value: /app/config/app-config.yml
              readinessProbe:
                httpGet:
                  path: /api/health/readiness
                  port: 8080
                  scheme: HTTP
              livenessProbe:
                httpGet:
                  path: /api/health/liveness
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 60
                periodSeconds: 30
              image: nodejs-configmap-redhat
              name: nodejs-configmap-redhat
              securityContext:
                privileged: false
              volumeMounts:
                - name: config
                  mountPath: /app/config
              ports:
                - containerPort: 8080
                  name: http
                  protocol: TCP
        metadata:
          labels:
            app: nodejs-configmap-redhat
            project: nodejs-configmap-redhat
            provider: nodeshift
            version: 2.1.0
      replicas: 1
      selector:
        app: nodejs-configmap-redhat
        project: nodejs-configmap-redhat
        provider: nodeshift
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - nodejs-configmap-redhat
            from:
              kind: ImageStreamTag
              name: 'nodejs-configmap-redhat:latest'
  - apiVersion: v1
    kind: Route
    spec:
      to:
        kind: Service
        name: nodejs-configmap-redhat
      port:
        targetPort: 8080
    metadata:
      name: nodejs-configmap-redhat
      labels:
        provider: nodeshift
        project: nodejs-configmap-redhat
        version: 2.1.0
  - apiVersion: v1
    data:
    app-config.yml: |
      message : "Hello, %s from a ConfigMap !"
      level : INFO
    kind: ConfigMap
    metadata:
      name: app-config
  - apiVersion: v1
    kind: List
    items:
    - apiVersion: v1
      kind: RoleBinding
      metadata:
        name: role-view-default
      subjects:
        - kind: ServiceAccount
          name: default
      roleRef:
          name: view


